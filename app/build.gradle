apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    flavorDimensions("1.0")
    defaultConfig {
        applicationId "com.optcrm.optreporting"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            //versionNameSuffix = '-debug'
            //applicationIdSuffix = '.debug'
        }
    }

    dataBinding {
        enabled = true
    }


    kapt {
        useBuildCache = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/rxjava.properties'
        exclude 'typedefs.txt'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
        optcrm {
            dimension = '1.0'
            minSdkVersion '19'
            targetSdkVersion '28'
        }
    }
    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }
}

configurations {
    all*.exclude group: 'com.android.support', module: 'support-v13'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'androidx.multidex:multidex:2.0.1'

    // Android Architecture Components - LifeCycle + Room

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$rootProject.lifecycle_version"
    implementation "android.arch.persistence.room:runtime:$rootProject.room_version"
    kapt "android.arch.persistence.room:compiler:$rootProject.room_version"

    // optional - RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$room_version"

    // if you want some benefits from Kotlin then try this
    implementation 'android.arch.work:work-runtime-ktx:1.0.0'

    // Android Support Libraries
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"

    // CardView
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"

    // Support v4 926kb
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"

    // Design lib
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"

    // recycler View 29kb
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"

    // Palette
    implementation "com.android.support:palette-v7:$rootProject.supportLibraryVersion"

    // Custom Chrome Tab
    implementation "com.android.support:customtabs:$rootProject.supportLibraryVersion"

    // Dagger Dependency
    implementation 'com.google.dagger:dagger:2.12'
    kapt 'com.google.dagger:dagger-compiler:2.12'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // co-routines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

    // Rx Java
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'

    // Rx Android
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    // Rx Binding
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'

    // circular imageView
    implementation 'de.hdodenhof:circleimageview:3.0.0'

    // Loggin Interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    // Glide - Image Loading
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    // Density Library
    implementation 'com.intuit.sdp:sdp-android:1.0.6'

    // Event Bus
    implementation 'org.greenrobot:eventbus:3.1.1'

    // Permission Library
    implementation 'com.afollestad:assent:0.2.5'

    // Text Drawable
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

    //Circle Image View
    implementation 'de.hdodenhof:circleimageview:3.0.0'

    //navigation component
    implementation "android.arch.navigation:navigation-fragment-ktx:$nav_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$nav_version"
    implementation 'com.github.aakira:expandable-layout:1.6.0@aar'

    // matrieal spinner
    implementation 'com.github.ganfra:material-spinner:2.0.0'

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.9@aar') {
        transitive = true
    }
}
